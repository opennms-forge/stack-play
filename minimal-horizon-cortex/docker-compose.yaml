---
version: '3'

volumes:
  data-cortex: {}
  data-postgres: {}
  data-opennms: {}
  data-opennms-cfg: {}
  data-grafana: {}

services:
  cortex:
    image: ${DOCKER_REGISTRY:-docker.io}/cortexproject/cortex:${CORTEX_VERSION:-v1.13.0}
    container_name: cortex
    volumes:
      - "data-cortex:/tmp/cortex"
      - "./container-fs/cortex/single-process-config.yaml:/etc/single-process-config.yaml"
    command: [ "-config.file=/etc/single-process-config.yaml" ]
    ports:
      - "9009:9009/tcp"
      - "9095:9095/tcp"

  database:
    image: ${DOCKER_REGISTRY:-docker.io}/postgres:${POSTGRES_VERSION:-15}
    container_name: database
    hostname: database
    environment:
      TZ: ${TIMEZONE:-America/New_York}
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - data-postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 30s
      retries: 3

  horizon:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_ORG:-opennms}/${HORIZON_OCI:-horizon}:${ONMS_VERSION:-latest}
    container_name: horizon
    hostname: horizon
    depends_on:
      - database
    environment:
      TZ: ${TIMEZONE:-America/New_York}
    volumes:
      - data-opennms:/opennms-data
      - data-opennms-cfg:/opt/opennms/etc
      - ./container-fs/horizon/opt/opennms/deploy:/opt/opennms/deploy
      - ./container-fs/horizon/opt/opennms-overlay:/opt/opennms-overlay
      - ./container-fs/horizon/etc/conf.d/confd.toml:/etc/confd/confd.toml
    command: ["-s"]
    ports:
      - "8101:8101/tcp"
      - "8980:8980/tcp"
      - "10162:1162/udp"
    healthcheck:
      test: [ "CMD", "curl", "-f", "-I", "http://localhost:8980/opennms/login.jsp" ]
      interval: 1m
      timeout: 5s
      retries: 3

  grafana:
    image: ${DOCKER_REGISTRY:-docker.io}/grafana/grafana:${GRAFANA_VERSION:-8.5.21}
    container_name: grafana
    hostname: grafana
    environment:
      TZ: ${TIMEZONE:-America/New_York}
      GF_SECURITY_ADMIN_PASSWORD: mypass
      GF_INSTALL_PLUGIN: opennms-helm-app
    volumes:
      - data-grafana:/var/lib/grafana
      - ./container-fs/grafana/pl-opennms-helm-app.yaml:/etc/grafana/provisioning/plugins/opennms-helm-app.yaml
    ports:
      - "3000:3000/tcp"
